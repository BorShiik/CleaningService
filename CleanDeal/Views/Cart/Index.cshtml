@model IEnumerable<CleanDeal.ViewModel.CartItemViewModel>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery AntiF
@{
    ViewData["Title"] = "Koszyk";
    var csrf = AntiF.GetAndStoreTokens(Context).RequestToken;
}
<h2>Koszyk</h2>
@if (!Model.Any())
{
    <p>Koszyk jest pusty.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Produkt</th>
                <th>Ilość</th>
                <th>Cena</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Product.Name</td>
                    <td>@item.Quantity</td>
                    <td>@(item.Product.Price * item.Quantity)</td>
                    <td>
                        <form asp-action="Remove" method="post">
                            <input type="hidden" name="id" value="@item.Product.Id" />
                            <button type="submit" class="btn btn-sm btn-danger">Usuń</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <p><strong>Razem:</strong> @ViewBag.Total.ToString("c")</p>
    <button id="payBtn" class="btn btn-success">Zapłać</button>
    <span id="error" class="text-danger ms-2"></span>
}
@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
const payBtn = document.getElementById("payBtn");
const errorEl = document.getElementById("error");
if (payBtn) {
    payBtn.addEventListener("click", async () => {
        payBtn.disabled = true;
        try {
            const resp = await fetch("@Url.Action("Checkout","Cart")", {
                method: "POST",
                headers: { "RequestVerificationToken": "@csrf" }
            });
            if (!resp.ok) throw new Error(await resp.text());
            const { id, key } = await resp.json();
            const stripe = Stripe(key);
            await stripe.redirectToCheckout({ sessionId: id });
        } catch (e) {
            errorEl.textContent = e.message ?? e;
            payBtn.disabled = false;
        }
    });
}
    </script>
}