@model CleanDeal.ViewModel.ChatPageViewModel
@{
    ViewData["Title"] = "Czat – Twoje zamówienia";
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const orderId = @Model.SelectedOrderId;
        if (orderId === 0) return;

        const currentUserId = '@ViewBag.CurrentUserId';
        const sendBtn       = document.getElementById("sendBtn");
        const messageInput  = document.getElementById("messageInput");
        const messagesList  = document.getElementById("messagesList");
        const receiverId    = '@Model.ReceiverId';

        function renderMessage(msg) {
            const div  = document.createElement("div");
            const self = msg.senderId === currentUserId;
            div.className = `mb-1 ${self ? "text-end" : "text-start"}`;
            const sender  = msg.senderName || msg.senderId;
            let   time    = "";
            if (msg.sentAt) {
                const d = new Date(msg.sentAt);
                time = d.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" });
            }
            div.innerHTML = `
                <span class="badge bg-secondary">${sender}</span>
                <span class="p-2 bg-light rounded">${msg.content}</span>
                <span class="text-muted small">${time}</span>
            `;
            return div;
        }

        if (sendBtn && messageInput && messagesList) {
            const connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

            connection.on("ReceiveMessage", msg => {
                messagesList.appendChild(renderMessage(msg));
                messagesList.scrollTop = messagesList.scrollHeight;
            });

            connection.start().then(() => {
                connection.invoke("JoinOrderGroup", orderId);
                sendBtn.disabled = false;
            });

            sendBtn.addEventListener("click", e => {
                e.preventDefault();
                const text = messageInput.value;
                if (!text) return;
                connection.invoke("SendOrderMessage", orderId, text, receiverId || "");
                messageInput.value = "";
                messageInput.focus();
            });

            messageInput.addEventListener("keydown", e => {
                if (e.key === "Enter") sendBtn.click();
            });
        }
    </script>
}

<div class="row">
    <div class="@(Model.SelectedOrderId == 0 ? "col-12 col-md-6 col-lg-5 mx-auto" : "col-12 col-md-4 border-end")"
         style="height:80vh; overflow-y:auto;">
        <ul class="list-group">
            @foreach (var order in Model.Orders)
            {
                <li class="list-group-item d-flex align-items-center @(order.Id == Model.SelectedOrderId ? "active selected-order" : "")">
                    <a href="@Url.Action("Order", "Chat", new { id = order.Id })"
                       class="w-100 text-decoration-none @(order.Id == Model.SelectedOrderId ? "fw-bold text-dark" : "text-primary")">
                        <span class="fw-bold">Zamówienie #@order.Id</span><br />
                        <span class="small">@order.ServiceType.Name (@order.Date.ToShortDateString())</span>
                    </a>
                </li>
            }
        </ul>
    </div>

    @if (Model.SelectedOrderId != 0)
    {
        <div class="col-md-8 d-flex flex-column" style="height:80vh;">
            <div id="messagesList" class="flex-grow-1 overflow-auto mb-2">
                @foreach (var m in Model.Messages)
                {
                    <div class="mb-1 @(m.SenderId == ViewBag.CurrentUserId ? "text-end" : "text-start")">
                        <span class="badge @(m.SenderName == "Admin" || m.SenderName == "Administrator" ? "bg-danger" : "bg-secondary")">
                            @m.SenderName
                        </span>
                        <span class="p-2 bg-light rounded">@m.Content</span>
                        <span class="text-muted small">@m.SentAt.ToLocalTime().ToString("HH:mm")</span>
                    </div>
                }
            </div>
            <div class="input-group">
                <input id="messageInput" class="form-control" placeholder="Wpisz wiadomość…">
                <button id="sendBtn" class="btn btn-primary" disabled>Wyślij</button>
            </div>
        </div>
    }
</div>
