@model CleanDeal.ViewModel.OrderCreateViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery AntiF
@{
    ViewData["Title"] = "Nowe zamówienie";
    Layout = "_Layout";
    var pl = System.Globalization.CultureInfo.GetCultureInfo("pl-PL");
    var csrf = AntiF.GetAndStoreTokens(Context).RequestToken;
    bool isAdmin = User.IsInRole("Admin");

    var prices = ViewBag.ServicePrices as IDictionary<int, decimal>;
}

<section class="section dark-background py-4">
    <div class="container text-center text-white">
        <h1 class="fw-bold mb-0">
            <i class="bi bi-plus-circle me-2"></i>@ViewData["Title"]
        </h1>
    </div>
</section>

<section class="section">
    <div class="container col-lg-6" data-aos="zoom-in">
        <div class="card shadow-sm border-0">
            <div class="card-body p-4">

                <form asp-action="Create" method="post" novalidate>

                    <div class="mb-3">
                        <label asp-for="Date" class="form-label fw-semibold"></label>
                        <input asp-for="Date" class="form-control" type="datetime-local" />
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Address" class="form-label fw-semibold"></label>
                        <input asp-for="Address" class="form-control" />
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ServiceTypeIds" class="form-label fw-semibold"></label>

                        <div class="list-group">
                            @foreach (var opt in Model.ServiceTypeOptions!)
                            {
                                var id = int.Parse(opt.Value!);
                                var price = prices![id];

                                <label class="list-group-item d-flex justify-content-between align-items-center">
                                    <span class="d-flex align-items-center">
                                        <input type="checkbox"
                                               name="ServiceTypeIds"
                                               value="@opt.Value"
                                               class="form-check-input me-2"
                                               @(opt.Selected ? "checked" : "") />
                                        @opt.Text
                                    </span>

                                    <span>
                                        <span class="badge bg-light text-dark fw-semibold me-2" data-price="@price">
                                            @price.ToString("c", pl)
                                        </span>
                                    </span>
                                </label>
                            }
                        </div>

                        <button type="button" class="btn btn-sm btn-outline-primary buy-discount-all mt-2">Kup zniżkę 10% (100 pkt)</button>

                        <span asp-validation-for="ServiceTypeIds" class="text-danger"></span>
                    </div>

                    @if (isAdmin)
                    {
                        <div class="mb-3">
                            <label asp-for="UserEmail" class="form-label fw-semibold"></label>
                            <input asp-for="UserEmail" class="form-control" />
                            <span asp-validation-for="UserEmail" class="text-danger"></span>
                        </div>
                    }

                    <div class="mb-4">
                        <h5 class="fw-semibold mb-1">Łączna kwota</h5>
                        <p id="totalPrice" class="fs-4 fw-bold mb-0">0,00 zł</p>
                    </div>

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check2-circle me-1"></i>Złóż zamówienie
                        </button>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            Anuluj
                        </a>
                    </div>
                </form>

            </div>
        </div>
    </div>
</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const checkboxes = document.querySelectorAll('input[name="ServiceTypeIds"]');
        const totalLbl = document.getElementById('totalPrice');
        let discount = false;

        function updateRowState(cb) {
            cb.closest('.list-group-item').classList.toggle('active', cb.checked);
        }

        function updateTotal() {
            let sum = 0;
            checkboxes.forEach(cb => {
                if (cb.checked) {
                    const price = parseFloat(cb.closest('.list-group-item')
                        .querySelector('[data-price]').dataset.price);
                    const finalPrice = discount ? price * 0.9 : price;
                    sum += finalPrice;
                }
            });
            totalLbl.textContent = sum.toLocaleString('pl-PL', { style: 'currency', currency: 'PLN' });
        }

        checkboxes.forEach(cb => {
            updateRowState(cb);
            cb.addEventListener('change', () => {
                updateRowState(cb);
                updateTotal();
            });
        });

        const btnDiscount = document.querySelector('.buy-discount-all');
        if (btnDiscount) {
            btnDiscount.addEventListener('click', async () => {
                try {
                    const resp = await fetch('@Url.Action("PurchaseDiscount", "Services")', {
                        method: 'POST',
                        headers: { 'RequestVerificationToken': '@csrf' }
                    });
                    if (!resp.ok) throw new Error(await resp.text());
                    discount = true;
                    btnDiscount.remove();
                    updateTotal();
                } catch (err) {
                    alert(err);
                }
            });
        }
        updateTotal();
    </script>
}
